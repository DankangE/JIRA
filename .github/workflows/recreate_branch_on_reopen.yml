name: Recreate branch on issue reopen
on:
  issues:
    types:
      - reopened

jobs:
  recreate-branch:
    name: Recreate branch for reopened issue
    runs-on: ubuntu-latest
    steps:
      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_form.yml

      - name: Recreate branch
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          BRANCH_NAME="${{ steps.issue-parser.outputs.issueparser_branchName }}"
          
          # Find the original JIRA ticket number from existing branches
          # Look for branches that contain this GitHub issue number and branch name
          EXISTING_BRANCH=$(git branch -r | grep -E "origin/.*gh${ISSUE_NUMBER}.*${BRANCH_NAME}" | head -1 | sed 's/origin\///' | sed 's/^ *//')
          
          if [ -n "$EXISTING_BRANCH" ]; then
            # Extract JIRA ticket from existing branch name (format: JIRA-123-gh45-branchname)
            JIRA_TICKET=$(echo "$EXISTING_BRANCH" | sed -E 's/-gh[0-9]+-.*//')
            RECREATED_BRANCH_NAME="${JIRA_TICKET}-${BRANCH_NAME}"
            echo "Found previous branch: $EXISTING_BRANCH"
            echo "Will recreate as: $RECREATED_BRANCH_NAME"
          else
            # Fallback: use parent key from issue form
            PARENT_KEY="${{ steps.issue-parser.outputs.issueparser_parentKey }}"
            RECREATED_BRANCH_NAME="${PARENT_KEY}-${BRANCH_NAME}"
            echo "No previous branch found, using parent key: $RECREATED_BRANCH_NAME"
          fi
          
          # Check if branch already exists
          if git show-ref --verify --quiet refs/remotes/origin/$RECREATED_BRANCH_NAME; then
            echo "Branch $RECREATED_BRANCH_NAME already exists, skipping creation"
          else
            echo "Creating branch: $RECREATED_BRANCH_NAME"
            git checkout -b "$RECREATED_BRANCH_NAME"
            git push origin "$RECREATED_BRANCH_NAME"
            echo "Successfully created branch: $RECREATED_BRANCH_NAME"
          fi

      - name: Log completion
        run: |
          echo "Branch recreation workflow completed for reopened issue #${{ github.event.issue.number }}"
