name: Delete branch on issue close
on:
  issues:
    types:
      - closed

jobs:
  delete-branch:
    name: Delete associated branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_form.yml

      - name: Close Jira issue
        run: |
          PARENT_KEY="${{ steps.issue-parser.outputs.issueparser_parentKey }}"
          
          echo "Closing Jira issue: $PARENT_KEY"
          
          # Get transition ID for "완료" status
          TRANSITIONS_RESPONSE=$(curl -s -X GET \
            -H "Authorization: Basic $(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64)" \
            -H "Accept: application/json" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$PARENT_KEY/transitions")
          
          echo "Available transitions: $TRANSITIONS_RESPONSE"
          
          # Find transition ID for "완료" or "Done"
          DONE_TRANSITION_ID=$(echo "$TRANSITIONS_RESPONSE" | jq -r '.transitions[] | select(.name == "완료" or .name == "Done" or .to.name == "완료" or .to.name == "Done") | .id' | head -1)
          
          if [ "$DONE_TRANSITION_ID" != "null" ] && [ -n "$DONE_TRANSITION_ID" ]; then
            echo "Found transition ID: $DONE_TRANSITION_ID"
            
            # Transition the issue to "완료"
            TRANSITION_RESPONSE=$(curl -s -X POST \
              -H "Authorization: Basic $(echo -n '${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}' | base64)" \
              -H "Accept: application/json" \
              -H "Content-Type: application/json" \
              -d "{\"transition\":{\"id\":\"$DONE_TRANSITION_ID\"}}" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$PARENT_KEY/transitions")
            
            echo "Jira issue $PARENT_KEY transitioned to 완료"
          else
            echo "::warning::Could not find '완료' or 'Done' transition for issue $PARENT_KEY"
            echo "Available transitions response: $TRANSITIONS_RESPONSE"
          fi
        continue-on-error: true

      - name: Find and delete branch
        run: |
          # Get issue information
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          BRANCH_NAME="${{ steps.issue-parser.outputs.issueparser_branchName }}"
          
          echo "Looking for branches with:"
          echo "- Issue Number: $ISSUE_NUMBER"
          echo "- Branch Name: $BRANCH_NAME"
          
          # Find branches that match the pattern: {JIRA_TICKET}-{SANITIZED_BRANCH_NAME}
          # The branch name format from creation: {ISSUE_NUMBER}-{SANITIZED_BRANCH_NAME}
          SANITIZED_BRANCH=$(echo "${BRANCH_NAME}" | sed 's/ /-/g')
          TARGET_BRANCH_PATTERN="${ISSUE_NUMBER}-${SANITIZED_BRANCH}"
          
          echo "Looking for branch pattern: $TARGET_BRANCH_PATTERN"
          
          BRANCHES_DELETED=0
          
          # Find branches that match the exact pattern
          MATCHING_BRANCHES=$(git branch -r | grep -E "origin/${TARGET_BRANCH_PATTERN}$" | sed 's/origin\///' | sed 's/^ *//' | xargs)
          
          if [ -n "$MATCHING_BRANCHES" ]; then
            for BRANCH in $MATCHING_BRANCHES; do
              echo "Found matching branch: $BRANCH"
              git push origin --delete "$BRANCH" && echo "Successfully deleted: $BRANCH" || echo "Failed to delete: $BRANCH"
              BRANCHES_DELETED=1
            done
          fi
          
          # If no exact matches found, report and continue
          if [ $BRANCHES_DELETED -eq 0 ]; then
            echo "::warning::No matching branch found for pattern: $TARGET_BRANCH_PATTERN"
            echo "This issue will be closed without branch deletion."
          else
            echo "Branch deletion completed successfully."
          fi

      - name: Log completion
        run: |
          echo "Branch deletion workflow completed for issue #${{ github.event.issue.number }}"
